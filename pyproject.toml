[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rules-maker"
dynamic = ["version"]
description = "ðŸ¤–ðŸ“‹ Transform web documentation into AI coding assistant rules and workflows"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    {name = "FormFluentAI", email = "support@formfluentai.com"}
]
keywords = ["scraping", "documentation", "ai", "cursor", "windsurf", "rules", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Text Processing :: Markup :: HTML",
]

dependencies = [
    # Core scraping
    "aiohttp>=3.11.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=5.0.0",
    "requests>=2.31.0",
    "playwright>=1.40.0",
    
    # Content processing
    "pydantic>=2.5.0",
    "jinja2>=3.1.0",
    "markdown>=3.5.0",
    "PyYAML>=6.0",
    "chardet>=5.2.0",
    
    # ML/AI features
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8.0",
    "sentence-transformers>=2.2.0",
    
    # Async and utilities
    "aiofiles>=23.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "httpx>=0.25.0",
    "fake-useragent>=1.4.0",
    
    # Rule generation
    "jsonschema>=4.17.0",
    "python-dotenv>=1.0.0",
    "more-itertools>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
selenium = ["selenium>=4.15.0"]
docker = ["docker>=6.1.0"]
all = [
    "selenium>=4.15.0",
    "docker>=6.1.0",
    "transformers>=4.35.0",
    "torch>=2.1.0",
]

[project.scripts]
rules-maker = "rules_maker.cli:main"
rm-setup = "rules_maker.setup:install"
rm-doctor = "rules_maker.setup:doctor"

[tool.setuptools]
packages = {find = {where = ["src"], include = ["rules_maker*"]}}

[tool.setuptools.package-data]
rules_maker = [
    "templates/*.j2",
    "templates/**/*.j2", 
    "schemas/*.json",
    "js_snippets/*.js"
]

[tool.setuptools.dynamic]
version = {attr = "rules_maker.__version__.__version__"}

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --disable-warnings"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]
