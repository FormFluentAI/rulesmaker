---
description: Next.js deployment patterns and DevOps practices
globs:
- '**/Dockerfile'
- '**/docker-compose.yml'
- '**/vercel.json'
- '**/.github/**/*'
alwaysApply: true
tags:
- nextjs
- deployment
- docker
- vercel
- ci-cd
version: 1.0.0
lastUpdated: '2025-09-03T06:05:40.621826'
trigger: always_on
---
# General Development Rules
*Generated on 2025-09-03 06:05:40*
# Next.js Deployment & DevOps

## Vercel Deployment
```json
// vercel.json
{
  "buildCommand": "npm run build",
  "outputDirectory": ".next",
  "framework": "nextjs",
  "functions": {
    "app/api/**/*.ts": {
      "maxDuration": 30
    }
  }
}
```

## Docker Deployment
```dockerfile
FROM node:18-alpine AS base
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production

FROM base AS build
RUN npm ci
COPY . .
RUN npm run build

FROM base AS runtime
COPY --from=build /app/.next ./.next
COPY --from=build /app/public ./public
EXPOSE 3000
CMD ["npm", "start"]
```

## Environment Configuration
```typescript
// next.config.js
module.exports = {
  env: {
    CUSTOM_KEY: process.env.CUSTOM_KEY,
  },
  experimental: {
    serverComponentsExternalPackages: ['@prisma/client'],
  },
}
```

## CI/CD Pipeline
```yaml
# .github/workflows/deploy.yml
name: Deploy
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm ci
      - run: npm run build
      - run: npm run test
```

## Static Export
```typescript
// next.config.js
module.exports = {
  output: 'export',
  trailingSlash: true,
  images: {
    unoptimized: true
  }
}
```

## ðŸš¨ Critical Deployment Rules

**ALWAYS:**
- Use environment variables for configuration
- Test builds before deployment
- Monitor application performance
- Use proper caching strategies
- Implement proper error handling

**NEVER:**
- Deploy without testing
- Expose sensitive data in builds
- Skip performance monitoring
- Ignore build warnings
- Deploy to production without staging

---
*Generated by Rules Maker with Next.js deployment best practices*
